//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.09.24 at 03:56:01 PM CEST 
//


package com.nex.gamebook.xsd;

import ae.javax.xml.bind.annotation.XmlEnum;
import ae.javax.xml.bind.annotation.XmlEnumValue;
import ae.javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for proprietarySkill.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="proprietarySkill">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="twice_attack"/>
 *     &lt;enumeration value="reflect_damage"/>
 *     &lt;enumeration value="life_leech"/>
 *     &lt;enumeration value="quick_reaction"/>
 *     &lt;enumeration value="cancel_hot"/>
 *     &lt;enumeration value="cancel_dot"/>
 *     &lt;enumeration value="cancel_buff"/>
 *     &lt;enumeration value="cancel_debuff"/>
 *     &lt;enumeration value="kick"/>
 *     &lt;enumeration value="stun"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "proprietarySkill")
@XmlEnum
public enum ProprietarySkill {

    @XmlEnumValue("twice_attack")
    TWICE_ATTACK("twice_attack"),
    @XmlEnumValue("reflect_damage")
    REFLECT_DAMAGE("reflect_damage"),
    @XmlEnumValue("life_leech")
    LIFE_LEECH("life_leech"),
    @XmlEnumValue("quick_reaction")
    QUICK_REACTION("quick_reaction"),
    @XmlEnumValue("cancel_hot")
    CANCEL_HOT("cancel_hot"),
    @XmlEnumValue("cancel_dot")
    CANCEL_DOT("cancel_dot"),
    @XmlEnumValue("cancel_buff")
    CANCEL_BUFF("cancel_buff"),
    @XmlEnumValue("cancel_debuff")
    CANCEL_DEBUFF("cancel_debuff"),
    @XmlEnumValue("kick")
    KICK("kick"),
    @XmlEnumValue("stun")
    STUN("stun");
    private final String value;

    ProprietarySkill(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ProprietarySkill fromValue(String v) {
        for (ProprietarySkill c: ProprietarySkill.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
